[main]
#web环境下替换SecurityManager默认的SessionManager
#sessionManager=org.apache.shiro.web.session.mgt.ServletContainerSessionManager

#替换SecurityManager默认的SessionManager
#sessionManager=org.apache.shiro.session.mgt.DefaultSessionManager
#securityManager.sessionManager=$sessionManager

#在Servlet容器中，默认使用JSESSIONID Cookie维护会话，且会话默认是跟容器绑定的；
#在某些情况下可能需要使用自己的会话机制，此时我们可以使用DefaultWebSessionManager来维护会话
#sessionIdCookie是sessionManager创建会话Cookie的模板
sessionIdCookie=org.apache.shiro.web.servlet.SimpleCookie
sessionManager=org.apache.shiro.web.session.mgt.DefaultWebSessionManager
#设置Cookie名字，默认为JSESSIONID
sessionIdCookie.name=sid
#设置Cookie的域名，默认空，即当前访问的域名
#sessionIdCookie.domain=sishuok.com
#设置Cookie的路径，默认空，即存储在域名根下
#sessionIdCookie.path=
#设置Cookie的过期时间，秒为单位，默认-1表示关闭浏览器时过期Cookie
sessionIdCookie.maxAge=1800
#如果设置为true，则客户端不会暴露给客户端脚本代码，使用HttpOnly cookie有助于减少某些类型的跨站点脚本攻击；
#此特性需要实现了Servlet 2.5 MR6及以上版本的规范的Servlet容器支持
sessionIdCookie.httpOnly=true
sessionManager.sessionIdCookie=$sessionIdCookie
#是否启用/禁用Session Id Cookie，默认是启用的；如果禁用后将不会设置Session Id Cookie，
#即默认使用了Servlet容器的JSESSIONID，且通过URL重写（URL中的“;JSESSIONID=id”部分）保存Session Id。
sessionManager.sessionIdCookieEnabled=true
#替换SecurityManager默认的SessionManager
securityManager.sessionManager=$sessionManager

#全局回话监听
sessionListener1=com.github.zhangkaitao.shiro.chapter10.web.listener.MySessionListener1
#监听某一个回话
sessionListener2=com.github.zhangkaitao.shiro.chapter10.web.listener.MySessionListener2
sessionManager.sessionListeners=$sessionListener1,$sessionListener2

#会话存储/持久化
sessionDAO=com.github.zhangkaitao.shiro.chapter10.session.dao.MySessionDAO

#配置设置会话ID生成器
sessionIdGenerator=org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator
sessionDAO.sessionIdGenerator=$sessionIdGenerator

sessionManager.sessionDAO=$sessionDAO
#缓存管理器，用于管理缓存的，此处使用Ehcache实现
cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
#设置ehcache缓存的配置文件；
cacheManager.cacheManagerConfigFile=classpath:ehcache.xml
#设置SecurityManager的cacheManager，会自动设置实现了
securityManager.cacheManager = $cacheManager

#回话验证
#设置全局会话超时时间，默认30分钟，即如果30分钟内没有访问会话将过期；
#默认情况下globalSessionTimeout将应用给所有Session。可以单独设置每个Session的timeout属性来为每个Session设置其超时时间。
#另外如果使用ServletContainerSessionManager进行会话管理，Session的超时依赖于底层Servlet容器的超时时间，可以在web.xml中配置其会话的超时时间（分钟为单位）
sessionManager.globalSessionTimeout=1800000
#是否开启会话验证器，默认是开启的；
sessionManager.sessionValidationSchedulerEnabled=true
#会话验证调度器
#sessionValidationScheduler=org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler
#设置调度时间间隔，单位毫秒，默认就是1小时；
#sessionValidationScheduler.interval = 100000
#设置会话验证调度器进行会话验证时的会话管理器
#sessionValidationScheduler.sessionManager=$sessionManager

#Shiro提供了使用Quartz会话验证调度器：使用时需要导入shiro-quartz依赖：
#sessionValidationScheduler=org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler
#sessionValidationScheduler.sessionValidationInterval = 10000
#设置会话验证调度器进行会话验证时的会话管理器
#sessionValidationScheduler.sessionManager=$sessionManager

#自定义#会话验证调度器
sessionValidationScheduler=com.github.zhangkaitao.shiro.chapter10.session.scheduler.MySessionValidationScheduler
#设置调度时间间隔，单位毫秒，默认就是1小时；
sessionValidationScheduler.interval = 10000
#设置会话验证调度器进行会话验证时的会话管理器
sessionValidationScheduler.sessionManager=$sessionManager
sessionManager.sessionValidationScheduler=$sessionValidationScheduler
#删除过期回话
sessionManager.deleteInvalidSessions=true

#自定义SessionFactory
sessionFactory=org.apache.shiro.session.mgt.OnlineSessionFactory
sessionManager.sessionFactory=$sessionFactory

securityManager.subjectDAO.sessionStorageEvaluator.sessionStorageEnabled = false

#配置session工厂拦截器
[filters]
online=org.apache.shiro.session.filter.OnlineSessionFilter
online.forceLogoutUrl=/login.jsp
online.sessionDAO=$sessionDAO

#配置用户名及密码、角色
[users]
zhang=123,admin
wang=123

#配置角色对应的权限
[roles]
admin=user:*,menu:*

#配置权限可以访问的资源
[urls]
/logout=logout
/login.jsp=authc
/**=anon
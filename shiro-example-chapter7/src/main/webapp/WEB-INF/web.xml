<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                            http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
                            version="3.0" metadata-complete="false">

    <!--- shiro 1.1 -->
    <!--<filter>
        <filter-name>iniShiroFilter</filter-name>
        <filter-class>org.apache.shiro.web.servlet.IniShiroFilter</filter-class>
        <init-param>
            <param-name>configPath</param-name>
            <param-value>classpath:shiro.ini</param-value>&lt;!&ndash; 默认先从/WEB-INF/shiro.ini，如果没有找classpath:shiro.ini&ndash;&gt;
        </init-param>-->
        <!--<init-param>-->
            <!--<param-name>config</param-name>-->
            <!--<param-value>-->
                <!--[main]-->
                <!--authc.loginUrl=/login-->

                <!--[users]-->
                <!--zhang=123,admin-->

                <!--[roles]-->
                <!--admin=user:*,menu:*-->

                <!--[urls]-->
                <!--/login=anon-->
                <!--/static/**=anon-->
                <!--/authenticated=authc-->
                <!--/role=authc,roles[admin]-->
                <!--/permission=authc,perms["user:create"]-->
            <!--</param-value>-->
        <!--</init-param>-->
    <!--</filter>
    <filter-mapping>
        <filter-name>iniShiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>-->


    <!--- shiro 1.2 -->
    <listener>
        <!--
            通过EnvironmentLoaderListener来创建相应的WebEnvironment，
            并自动绑定到ServletContext，默认使用IniWebEnvironment实现
        -->
        <listener-class>org.apache.shiro.web.env.EnvironmentLoaderListener</listener-class>
    </listener>

    <!--修改默认实现及其加载的配置文件位置 start -->
    <!--
        shiroConfigLocations默认是“/WEB-INF/shiro.ini”，
        IniWebEnvironment默认是先从/WEB-INF/shiro.ini加载，
        如果没有就默认加载classpath:shiro.ini。
    -->
    <context-param>
        <param-name>shiroEnvironmentClass</param-name>
        <!-- 默认先从/WEB-INF/shiro.ini，如果没有找classpath:shiro.ini -->
        <param-value>org.apache.shiro.web.env.IniWebEnvironment</param-value>
    </context-param>
    <context-param>
        <param-name>shiroConfigLocations</param-name>
        <!--初级有缺陷的用户登录-->
        <param-value>classpath:shiro.ini</param-value>
        <!--基于Basic的拦截器身份验证-->
        <!--<param-value>classpath:shiro-basicfilterlogin.ini</param-value>-->
        <!--基于表单的拦截器身份验证-->
        <!--<param-value>classpath:shiro-formfilterlogin.ini</param-value>-->
    </context-param>
    <!--修改默认实现及其加载的配置文件位置 end -->

    <!--与Spring集成 start -->
    <filter>
        <!--
            DelegatingFilterProxy作用是自动到spring容器查找名字为shiroFilter（filter-name）的bean
            并把所有Filter的操作委托给它。然后将ShiroFilter配置到spring容器即可
        -->
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.apache.shiro.web.servlet.ShiroFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--与Spring集成 end -->

    <!--<error-page>
        <error-code>401</error-code>
        <location>/WEB-INF/jsp/unauthorized.jsp</location>
    </error-page>-->
</web-app>
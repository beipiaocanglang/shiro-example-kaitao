[main]
#Web INI配置

#默认是/login.jsp
authc.loginUrl=/login
#没有角色 或 权限 时跳转路径
roles.unauthorizedUrl=/unauthorized
perms.unauthorizedUrl=/unauthorized
#退出后重定向的url路径
logout.redirectUrl=/login

[users]
zhang=123,admin
wang=123

[roles]
admin=user:*,menu:*

[urls]
# 其格式是：
#   “url=拦截器[参数]，拦截器[参数]”；
#   即如果当前请求的url匹配[urls]部分的某个url模式，将会执行其配置的拦截器
#   anon拦截器表示匿名访问（即不需要登录即可访问）；
#   authc拦截器表示需要身份认证通过后才能访问；
#   roles[admin]拦截器表示需要有admin角色授权才能访问；
#   perms["user:create"]拦截器表示需要有“user:create”权限才能访问。

# url模式使用Ant风格模式：
#   Ant路径通配符支持?、*、**，注意通配符匹配不包括目录分隔符“/”：
#   ?：匹配一个字符，如”/admin?”将匹配/admin1，但不匹配/admin或/admin2；
#   *：匹配零个或多个字符串，如/admin*将匹配/admin、/admin123，但不匹配/admin/1；
#   **：匹配路径中的零个或多个路径，如/admin/**将匹配/admin/a或/admin/a/b。

# url模式匹配顺序
# url模式匹配顺序是按照在配置中的声明顺序匹配，即从头开始使用第一个匹配的url模式对应的拦截器链。如：
#   /bb/**=filter1
#   /bb/aa=filter2
#   /**=filter3
#   如果请求的url是“/bb/aa”，因为按照声明顺序进行匹配，那么将使用filter1进行拦截

/logout2=logout
/login=anon
/logout=anon
/unauthorized=anon
/static/**=anon
#需要身份验证的url
#即访问这些地址时会首先判断用户有没有登录，如果没有登录默会跳转到登录页面，默认是/login.jsp，可以通过在[main]部分通过如下配置修改：authc.loginUrl=/login
/authenticated=authc
/role=authc,roles[admin]
/permission=authc,perms["user:create"]
